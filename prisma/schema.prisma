// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("HEROKU_POSTGRESQL_CHARCOAL_URL")
}

model Order {
  orderId        String      @id @default(uuid())
  walletOwnerAddress String
  depositedTokenAddress String
  desiredTokenAddress String
  depositedTokenAmount Decimal
  isNativeETH Boolean
  createdAt DateTime @default(now())
  lastUpdatedAt DateTime @default(now())
  nextUpdateAt DateTime @default(now())
  unitOfTime String
  frequency Int
  isLimitOrder Boolean @default(false)
  marketCapTarget Decimal @default(0)
  retryCount Int @default(0)
  user User @relation(fields: [userId], references: [id])
  userId String
}

model User {
  id        String      @id
  wallet1   String   @unique
  wallet1PrivateKey   String
  wallet2   String   @unique
  wallet2PrivateKey   String
  wallet3   String   @unique
  wallet3PrivateKey   String
  orders Order[]
  links Link[]
  orderStatusHistory OrderStatusHistory[]
}

model Link {
  userId String @unique
  user User @relation(fields: [userId], references: [id])
  walletAddress String
}

model Token {
  address String @unique
  name String
  symbol String
}

model OrderStatusHistory {
  userId String
  user User @relation(fields: [userId], references: [id])
  orderId String  @unique
  walletOwnerAddress String
  depositedTokenAddress String
  desiredTokenAddress String
  depositedTokenAmount Decimal
  isNativeETH Boolean
  createdAt DateTime @default(now())
  lastUpdatedAt DateTime @default(now())
  nextUpdateAt DateTime @default(now())
  unitOfTime String
  frequency Int
  isLimitOrder Boolean @default(false)
  marketCapTarget Decimal @default(0)
  status String
  message String
}

model Analytics {
  id String @id @default(uuid())
  buyCount Int @default(0)
  sellCount Int @default(0)
  date DateTime @default(now())
  orderStatusChecks Int @default(0)
  activeOrdersChecks Int @default(0)
  ordersCreated Int @default(0)
  limitOrdersCreated Int @default(0)
  ordersUpdated Int @default(0)
  limitOrdersUpdated Int @default(0)
  ordersDeleted Int @default(0)
  limitOrdersDeleted Int @default(0)
  buyTxFailed Int @default(0)
  buyTxSucceeded Int @default(0)
  sellTxFailed Int @default(0)
  sellTxSucceeded Int @default(0)
  tokenStats TokenStats[]
}

model TokenStats {
  analyticsId String
  analytics Analytics @relation(fields: [analyticsId], references: [id])
  address String @unique
  name String
  symbol String
  totalAmount Decimal @default(0)
  searchCount Int @default(0)
}